{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actions.js';\n\nconst WorkspaceReducers = function () {\n  let workspaces = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL:\n      console.log(action.data);\n      return action.data;\n\n    case CREATE:\n      return [...workspaces, action.payload];\n\n    case UPDATE:\n      return workspaces.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return workspaces.filter(post => post._id !== action.payload);\n\n    default:\n      return workspaces;\n  }\n};\n\n_c = WorkspaceReducers;\nexport default WorkspaceReducers;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkspaceReducers\");","map":{"version":3,"sources":["/home/hain/code/workspace/src/reducers/Workspace.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","WorkspaceReducers","workspaces","action","type","console","log","data","payload","map","post","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAiD,yBAAjD;;AAEA,MAAMC,iBAAiB,GAAG,YAA6B;AAAA,MAA5BC,UAA4B,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKP,SAAL;AACFQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAnB;AACA,aAAOJ,MAAM,CAACI,IAAd;;AACE,SAAKT,MAAL;AACF,aAAO,CAAC,GAAGI,UAAJ,EAAgBC,MAAM,CAACK,OAAvB,CAAP;;AACE,SAAKT,MAAL;AACF,aAAOG,UAAU,CAACO,GAAX,CAAgBC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACK,OAAP,CAAeG,GAA5B,GAAkCR,MAAM,CAACK,OAAzC,GAAmDE,IAA7E,CAAP;;AACE,SAAKV,MAAL;AACF,aAAOE,UAAU,CAACU,MAAX,CAAmBF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACK,OAAhD,CAAP;;AACE;AACF,aAAON,UAAP;AAXD;AAaA,CAdD;;KAAMD,iB;AAgBN,eAAeA,iBAAf","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actions.js';\n\nconst WorkspaceReducers = (workspaces = [], action) => {\n\tswitch (action.type) {\n    case FETCH_ALL:\n\t\tconsole.log(action.data)\n\t\treturn action.data;\n    case CREATE:\n\t\treturn [...workspaces, action.payload];\n    case UPDATE:\n\t\treturn workspaces.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n\t\treturn workspaces.filter((post) => post._id !== action.payload);\n    default:\n\t\treturn workspaces;\n\t}\n};\n\nexport default WorkspaceReducers\n"]},"metadata":{},"sourceType":"module"}