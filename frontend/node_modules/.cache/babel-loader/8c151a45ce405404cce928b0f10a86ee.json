{"ast":null,"code":"var _jsxFileName = \"/home/hain/code/workspace/src/components/Auth/Auth.jsx\",\n    _s = $RefreshSig$();\n\nimport { Paper, Button, TextField, Grid, Box, Typography } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport Input from './Input.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signin } from '../../actions/Auth.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Auth() {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isSignup, setIsSignup] = useState(false);\n  const hasFailed = useSelector(state => state.hasFailed);\n  const [showPassword, setShowPassword] = useState(false);\n  const initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n  const [form, setForm] = useState(initialState);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (isSignup) {} else {\n      dispatch(signin(form, () => navigate));\n    }\n  }\n\n  function handleChange(e) {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function toggleSignup() {\n    setIsSignup(prevState => !prevState);\n  }\n\n  function toggleShowPassword() {\n    setShowPassword(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        m: 2\n      },\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          p: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            aign: \"center\",\n            justifyContent: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            variant: \"h5\",\n            children: isSignup ? \"Sign Up\" : \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                name: \"firstname\",\n                label: \"first name\",\n                onChange: handleChange,\n                half: \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"lastname\",\n                label: \"last name\",\n                onChange: handleChange,\n                half: \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(Grid, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"email\",\n              label: \"email\",\n              handleChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"password\",\n              label: \"password\",\n              type: showPassword ? \"text\" : \"password\",\n              handleChange: handleChange,\n              handleShowPassword: toggleShowPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                name: \"confirmPassword\",\n                label: \"repeat password\",\n                type: showPassword ? \"text\" : \"password\",\n                handleChange: handleChange,\n                handleShowPassword: toggleShowPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(Grid, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              align: \"center\",\n              variant: \"contained\",\n              fullWidth: true,\n              children: isSignup ? \"Sign Up\" : \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              align: \"center\",\n              onClick: toggleSignup,\n              children: isSignup ? \"Already have an account? Sign in\" : \"Don't have an account? Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 8\n            }, this), hasFailed && /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Error, invalid login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Auth, \"GCYcU+G8gPDFr2gtuZ1T2yAQfI0=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/hain/code/workspace/src/components/Auth/Auth.jsx"],"names":["Paper","Button","TextField","Grid","Box","Typography","useState","useEffect","Input","useDispatch","useSelector","signin","useNavigate","Auth","dispatch","navigate","isSignup","setIsSignup","hasFailed","state","showPassword","setShowPassword","initialState","firstName","lastName","email","password","confirmPassword","form","setForm","handleSubmit","e","preventDefault","handleChange","target","name","value","toggleSignup","prevState","toggleShowPassword","m","minHeight"],"mappings":"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","sourcesContent":["import { Paper, Button, TextField, Grid, Box, Typography} from '@mui/material';\nimport {useState, useEffect} from 'react';\nimport Input from './Input.jsx';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {signin} from '../../actions/Auth.js';\nimport {useNavigate} from 'react-router-dom';\n\nfunction Auth(){\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\tconst [isSignup, setIsSignup] = useState(false);\n\tconst hasFailed = useSelector((state) => state.hasFailed);\n\tconst [showPassword, setShowPassword] = useState(false);\n\n\tconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\tconst [form, setForm] = useState(initialState);\n\n\tfunction handleSubmit(e){\n\t\te.preventDefault();\n\t\tif(isSignup){\n\t\t}else{\n\t\t\tdispatch(signin(form, ()=>navigate));\n\t\t}\n\t}\n\n\tfunction handleChange(e){\n\t\tsetForm({...form, [e.target.name]: e.target.value});\n\t}\n\n\tfunction toggleSignup(){\n\t\tsetIsSignup((prevState) => !prevState);\n\t}\n\tfunction toggleShowPassword(){\n\t\tsetShowPassword((prevState) => !prevState);\n\t}\n\treturn(\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<Grid container spacing={0}\n\t\t\t\t  alignItems=\"center\"\n\t\t\t\t  justifyContent=\"center\"\n\t\t\t\t  sx={{m: 2}}\n\t\t\t\t  style={{minHeight: '100vh' }}>\n\t\t\t\t<Paper elevation={3} >\n\t\t\t\t\t<Box p={3}>\n\t\t\t\t\t\t<Grid container spacing={2} aign=\"center\" justifyContent=\"center\">\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Typography align=\"center\" variant=\"h5\">{isSignup ? \"Sign Up\" : \"Sign in\"}</Typography>\n\t\t\t\t\t\t{isSignup && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Grid container >\n\t\t\t\t\t\t\t\t\t<TextField name=\"firstname\" label=\"first name\" onChange={handleChange} half=\"true\" />\n\t\t\t\t\t\t\t\t\t<TextField name=\"lastname\" label=\"last name\" onChange={handleChange} half=\"true\" />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t<Input name=\"email\" label=\"email\" handleChange={handleChange}/>\n\t\t\t\t\t\t\t<Input name=\"password\" label=\"password\" type={showPassword?\"text\":\"password\"} handleChange={handleChange} handleShowPassword={toggleShowPassword}/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{isSignup && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Grid container >\n\t\t\t\t\t\t\t\t\t<Input name=\"confirmPassword\" label=\"repeat password\" type={showPassword?\"text\":\"password\"} handleChange={handleChange} handleShowPassword={toggleShowPassword}/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t<div/>\n\t\t\t\t\t\t\t<Button type=\"submit\" align=\"center\" variant=\"contained\" fullWidth>{isSignup?\"Sign Up\": \"Sign In\"}</Button>\n\t\t\t\t\t\t\t<Button align=\"center\" onClick={toggleSignup}>{isSignup ? \"Already have an account? Sign in\":\"Don't have an account? Sign up\"}</Button>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\thasFailed && (\n\t\t\t\t\t\t\t\t\t<Typography>Error, invalid login</Typography>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t\t</Paper>\n\t\t</Grid>\n\t\t</form>\n\t)\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}