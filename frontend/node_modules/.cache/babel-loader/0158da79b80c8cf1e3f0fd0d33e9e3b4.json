{"ast":null,"code":"import { FETCH_ALL } from '../constants/actions.js';\nimport * as api from '../api/Workspace.js';\nexport const getWorkspace = (formData, router) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getWorkspaces();\n    dispatch({\n      type: FETCH_ALL,\n      data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteWorkspace = (formData, router) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getWorkspaces();\n    dispatch({\n      type: FETCH_ALL,\n      data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/hain/code/workspace/src/actions/Workspaces.js"],"names":["FETCH_ALL","api","getWorkspace","formData","router","dispatch","data","getWorkspaces","type","error","console","log","deleteWorkspace"],"mappings":"AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,qBAArB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB,MAAOC,QAAP,IAAoB;AACrE,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACM,aAAJ,EAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,SAAR;AAAmBM,MAAAA;AAAnB,KAAD,CAAR;AACA,GAHD,CAGE,OAAOG,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACD,CAPM;AAUP,OAAO,MAAMG,eAAe,GAAG,CAACT,QAAD,EAAWC,MAAX,KAAsB,MAAOC,QAAP,IAAoB;AACxE,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACM,aAAJ,EAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,SAAR;AAAmBM,MAAAA;AAAnB,KAAD,CAAR;AACA,GAHD,CAGE,OAAOG,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACD,CAPM","sourcesContent":["import { FETCH_ALL } from '../constants/actions.js';\nimport * as api from '../api/Workspace.js';\n\nexport const getWorkspace = (formData, router) => async (dispatch) => {\n\ttry {\n\t\tconst { data } = await api.getWorkspaces();\n\t\tdispatch({ type: FETCH_ALL, data });\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\n\nexport const deleteWorkspace = (formData, router) => async (dispatch) => {\n\ttry {\n\t\tconst { data } = await api.getWorkspaces();\n\t\tdispatch({ type: FETCH_ALL, data });\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}