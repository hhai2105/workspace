{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actions.js';\nexport default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/home/hain/code/workspace/src/reducers/Workspace.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","posts","action","type","payload","LIKE","map","post","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAiD,yBAAjD;AAEA,gBAAe,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,SAAL;AACE,aAAOK,MAAM,CAACE,OAAd;;AACF,SAAKC,IAAL;AACE,aAAOJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACE,OAAP,CAAeI,GAA5B,GAAkCN,MAAM,CAACE,OAAzC,GAAmDG,IAAxE,CAAP;;AACF,SAAKT,MAAL;AACE,aAAO,CAAC,GAAGG,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAKL,MAAL;AACE,aAAOE,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACE,OAAP,CAAeI,GAA5B,GAAkCN,MAAM,CAACE,OAAzC,GAAmDG,IAAxE,CAAP;;AACF,SAAKP,MAAL;AACE,aAAOC,KAAK,CAACQ,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACE,OAA3C,CAAP;;AACF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actions.js';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case LIKE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}